<?php

namespace Administration\AdministrationBundle\Repository;

use DoctrineExtensions\Query\Mysql\Radians;

/**
 * EtablissementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtablissementRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByDemande(){
        $req = $this->createQueryBuilder('p')
            ->select('p')
            ->where('p.autorisationEtablissement like :demande')
            ->orderBy('p.id')
            ->setParameter('demande', 'desactive');
        return $req->getQuery()->getResult();
    }

    public function findBySponsor(){
        $req = $this->createQueryBuilder('p')
            ->select('p')
            ->where('p.sponsorEtablissement like :sponsor')
            ->orderBy('p.id')
            ->setParameter('sponsor', 'active');
        return $req->getQuery()->getResult();
    }

    public function recherche($recherche){
        $req = $this->createQueryBuilder('a')
            ->select('a')
            ->join('a.image','p')
            ->where('a.nomEtablissement like :recherche')
            ->setParameter('recherche', $recherche.'%');

        return $req->getQuery()->getResult();
    }

    public function findByLocation($lat, $long)
    {
        $em = $this->getEntityManager();
        //var_dump($lat);
        //var_dump($long);
        //die();
        $req = $em->createQuery("SELECT
                                    (p.adresseEtablissement) AS adresseEtablissement, 
                                    (p.postaleEtablissement) AS postaleEtablissement, 
                                    (p.gouvernorat) AS gouvernoratEtablissement, 
                                    (p.region) AS regionEtablissement, 
                                    (p.image) as imageEtablissement, 
                                    (p.icone) as iconeEtablissement, p.id as idEtablissement, 
                                    (p.nomEtablissement) as titreEtablissement, 
                                    (p.latEtablissement) as latEtablissement , 
                                    (p.longEtablissement) as longEtablissement, 
                                    ( 6386 * ACOS( COS( radians(" . $lat . ") ) * COS( radians( p.latEtablissement ) ) * COS( radians( p.longEtablissement ) - radians(" . $long . ") ) + sin( radians(". $lat . ") ) * sin( radians( p.latEtablissement ) ) ) / 2 ) AS distance 
                                    FROM AdministrationBundle:Etablissement p 
                                    HAVING distance < 2000");
        return $req->getResult();

    }
}
